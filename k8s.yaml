apiVersion: apps/v1
kind: Deployment
metadata:
  name: je-badminton-venue-manager-deployment
  namespace: test
  labels:
    name: "je-badminton-venue-manager"
  annotations:
    keel.sh/policy: major
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 30s"
spec:
  selector:
    matchLabels:
      app: je-badminton-venue-manager
  template:
    metadata:
      labels:
        app: je-badminton-venue-manager
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "je"
        vault.hashicorp.com/agent-inject-secret-config: "/kv/je"
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "/kv/je" -}}
            export DATABASE_URL="{{ .Data.data.DATABASE_URL}}"
            export AUTH_SECRET="{{ .Data.data.AUTH_SECRET }}"
            export AUTH_ORIGIN="{{ .Data.data.AUTH_ORIGIN }}"
            export GOOGLE_CLIENT_ID="{{ .Data.data.GOOGLE_CLIENT_ID }}"
            export GOOGLE_CLIENT_SECRET="{{ .Data.data.GOOGLE_CLIENT_SECRET }}"
            export LINE_CLIENT_ID="{{ .Data.data.LINE_CLIENT_ID }}"
            export LINE_CLIENT_SECRET="{{ .Data.data.LINE_CLIENT_SECRET }}"
            export DISCORD_CLIENT_ID="{{ .Data.data.DISCORD_CLIENT_ID }}"
            export DISCORD_CLIENT_ID="{{ .Data.data.DISCORD_CLIENT_ID }}"
          {{- end }}
    spec:
      containers:
        - name: web
          image: ghcr.io/henry753951/badminton-venue-manager:latest
          command:
            - sh
            - "-c"
          args:
            - . /vault/secrets/config && exec node .output/server/index.mjs
          ports:
            - name: web
              containerPort: 3000
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      imagePullSecrets:
        - name: ghcr-login-secret
---
apiVersion: v1
kind: Service
metadata:
  name: je-badminton-venue-manager
  namespace: test
spec:
  ports:
    - name: web
      protocol: TCP
      port: 3000
      targetPort: web
  selector:
    app: je-badminton-venue-manager
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: je-badminton-venue-manager-ingressroute
  namespace: test
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`je-badminton-venue-manager.hongyu.dev`)
      middlewares:
        - name: cloudflare-real-ip
          namespace: traefik
        - name: cloudflare-del-cf-verify-header
          namespace: traefik
      services:
        - name: je-badminton-venue-manager
          port: web
